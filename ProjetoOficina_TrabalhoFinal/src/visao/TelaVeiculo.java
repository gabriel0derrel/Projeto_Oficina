/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package visao;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.ICrud;
import modelos.Modelo;
import modelos.Veiculo;
import persistencia.ModeloDAO;
import persistencia.VeiculoDAO;

/**
 *
 * @author Cliente
 */
public class TelaVeiculo extends javax.swing.JInternalFrame {
    private ICrud<Modelo> modeloBD = null;
    private ICrud<Veiculo> veiculoBD = null;
    /**
     * Creates new form TelaVeiculo
     */
    public TelaVeiculo() {
        initComponents();
        try {
            modeloBD = new ModeloDAO();
            veiculoBD = new VeiculoDAO();
          
            List<Modelo> listaDeModelo = new ArrayList<>();
            listaDeModelo = null;
            listaDeModelo = modeloBD.listar();
            jComboBox_Modelo.removeAllItems();
            for(int pos = 0; pos < listaDeModelo.size(); pos++){
              jComboBox_Modelo.addItem(listaDeModelo.get(pos).toString());
            }
          mostrarVeiculoNaGrid();
        } catch (Exception erro) {
          JOptionPane.showMessageDialog(null, "Construtor Tela: "+erro.getMessage());
        }
    }
        private void limparTela(){
      jFormattedTextField1_chassi.setValue(null);
      jTextField_kilometragem.setText("");
      jTextField_patrimonio.setText("");
      jTextField_placa.setText("");
      jComboBox_Modelo.setSelectedIndex(0);
      jYearChooser1_anomodelo.setYear(2024);
      jYearChooser2_anofabricacao.setYear(2024);
    }
    
    private void mostrarVeiculoNaGrid(){
        try {
            List<Veiculo> listaDeVeiculo = new ArrayList<>();
            listaDeVeiculo = null;
            listaDeVeiculo = veiculoBD.listar();
            DefaultTableModel model =  (DefaultTableModel) jTable_Saida.getModel();
            model.setNumRows(0); 
            if(listaDeVeiculo.isEmpty()) throw new Exception("Lista de Ve√≠culo BD Vazia");
            jTable_Saida.setRowHeight(75);
            for(int j = 0; j<8;j++){
                jTable_Saida.getColumnModel().getColumn(j).setCellRenderer(new MultiLineTableCellRenderer());
            }
            for (Veiculo objVeiculo : listaDeVeiculo){
                Calendar calendarAnoFabricacao = Calendar.getInstance();
                calendarAnoFabricacao.setTime(objVeiculo.getAnoFabricacao());
                int anoFabricacao = calendarAnoFabricacao.get(Calendar.YEAR);

                Calendar calendarAnoModelo = Calendar.getInstance();
                calendarAnoModelo.setTime(objVeiculo.getAnoModelo());
                int anoModelo = calendarAnoModelo.get(Calendar.YEAR);

                String[] saida = new String[8];
                    saida[0] = objVeiculo.getPlaca()+ "";
                    saida[1] = String.valueOf(anoFabricacao);
                    saida[2] = objVeiculo.getDataRegistro()+ "";
                    if(objVeiculo.getChassi() == null){
                        saida[3] = "";
                    }else{
                        saida[3] = objVeiculo.getChassi()+ "";
                    }
                    if(objVeiculo.getPatrimonio() == null){
                        saida[4] = "";
                    }else{
                        saida[4] = objVeiculo.getPatrimonio()+ "";
                    }
                    saida[5] = objVeiculo.getKilometragem()+ "";
                    saida[6] = String.valueOf(anoModelo);
                    saida[7] = objVeiculo.getModelo().toString()+ "";
                model.addRow(saida);
            }  
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro.getMessage());
        }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Saida = new javax.swing.JTable();
        jButtonincluir = new javax.swing.JButton();
        jButton_alterar = new javax.swing.JButton();
        jButton_buscar = new javax.swing.JButton();
        jTextField_patrimonio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_kilometragem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_placa = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_Modelo = new javax.swing.JComboBox<>();
        jYearChooser1_anomodelo = new com.toedter.calendar.JYearChooser();
        jYearChooser2_anofabricacao = new com.toedter.calendar.JYearChooser();
        jCalendar1_dataregistro = new com.toedter.calendar.JCalendar();
        jFormattedTextField1_chassi = new javax.swing.JFormattedTextField();

        setPreferredSize(new java.awt.Dimension(1119, 466));

        jTable_Saida.setBackground(new java.awt.Color(153, 255, 204));
        jTable_Saida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "placa", "anoFabricacao", "dataRegistro", "chassi", "patrimonio", "kilometragem", "anoModelo", "Modelo"
            }
        ));
        jTable_Saida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SaidaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Saida);

        jButtonincluir.setBackground(new java.awt.Color(0, 153, 0));
        jButtonincluir.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonincluir.setForeground(new java.awt.Color(0, 255, 204));
        jButtonincluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/figuras/seta.png"))); // NOI18N
        jButtonincluir.setText("INCLUIR");
        jButtonincluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonincluirActionPerformed(evt);
            }
        });

        jButton_alterar.setBackground(new java.awt.Color(0, 153, 0));
        jButton_alterar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton_alterar.setForeground(new java.awt.Color(0, 255, 204));
        jButton_alterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/figuras/troca.png"))); // NOI18N
        jButton_alterar.setText("ALTERAR");
        jButton_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_alterarActionPerformed(evt);
            }
        });

        jButton_buscar.setBackground(new java.awt.Color(0, 153, 0));
        jButton_buscar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton_buscar.setForeground(new java.awt.Color(0, 255, 204));
        jButton_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/figuras/procurar.png"))); // NOI18N
        jButton_buscar.setText("BUSCAR");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });

        jTextField_patrimonio.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_patrimonio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField_patrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_patrimonioActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setText("kilometragem");

        jTextField_kilometragem.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_kilometragem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("PLACA");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setText("modelo");

        jTextField_placa.setBackground(new java.awt.Color(204, 255, 204));
        jTextField_placa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel9.setText("anoFabricacao");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setText("chassi");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setText("dataRegistro");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setText("patrimonio");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel11.setText("anoModelo");

        jComboBox_Modelo.setBackground(new java.awt.Color(204, 255, 204));
        jComboBox_Modelo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jYearChooser2_anofabricacao.setBackground(new java.awt.Color(204, 255, 204));

        jFormattedTextField1_chassi.setBackground(new java.awt.Color(204, 255, 204));
        try {
            jFormattedTextField1_chassi.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#################")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButton_buscar)
                                    .addGap(23, 23, 23))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel11)
                                    .addGap(18, 18, 18)
                                    .addComponent(jYearChooser1_anomodelo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel6)
                                    .addGap(215, 215, 215)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jButtonincluir)
                                        .addGap(150, 150, 150)
                                        .addComponent(jButton_alterar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_placa, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(18, 18, 18)
                                                .addComponent(jYearChooser2_anofabricacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(jFormattedTextField1_chassi, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextField_kilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextField_patrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCalendar1_dataregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel1)
                    .addComponent(jTextField_placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFormattedTextField1_chassi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(jCalendar1_dataregistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jYearChooser2_anofabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jTextField_patrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jTextField_kilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)
                            .addComponent(jYearChooser1_anomodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonincluir)
                            .addComponent(jButton_alterar)
                            .addComponent(jButton_buscar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonincluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonincluirActionPerformed
        try {
// **Valida√ß√£o da Placa**
            String placa = jTextField_placa.getText().trim().toUpperCase();
            if (placa.isEmpty() || !placa.matches("^[A-Z]{3}[0-9][0-9A-Z][0-9]{2}$"))
                throw new Exception("Placa inv√°lida! Use o formato ABC-1234 ou ABC1D23.");

            // **Valida√ß√£o do Ano de Fabrica√ß√£o**
            int anoFabricacao = jYearChooser2_anofabricacao.getYear();
            int anoAtual = Calendar.getInstance().get(Calendar.YEAR);
            if (anoFabricacao < 1900 || anoFabricacao > anoAtual)
                throw new Exception("Ano de fabrica√ß√£o inv√°lido! Deve estar entre 1900 e " + anoAtual + ".");

            // **Valida√ß√£o do Ano do Modelo**
            int anoModelo = jYearChooser1_anomodelo.getYear();
            if (anoModelo > anoAtual + 1)
                throw new Exception("Ano do modelo inv√°lido! Deve ser no m√°ximo " + (anoAtual + 1) + ".");

            // **Valida√ß√£o da Data de Registro**
            Date dataRegistro = jCalendar1_dataregistro.getDate();
            if (dataRegistro == null)
                throw new Exception("Data de registro inv√°lida! Selecione uma data v√°lida.");

            // **Valida√ß√£o do Chassi**
            String chassi = jFormattedTextField1_chassi.getText().trim().toUpperCase();
            if (chassi.isEmpty())
                chassi = null; 
            else if (chassi.length() != 17 || !chassi.matches("[A-Z0-9]+"))
                throw new Exception("Chassi inv√°lido! Deve conter exatamente 17 caracteres alfanum√©ricos.");

            // **Valida√ß√£o do Patrim√¥nio**
            String patrimonioTexto = jTextField_patrimonio.getText().trim();
            if (patrimonioTexto.isEmpty())
                patrimonioTexto = "-1";
            else if (!patrimonioTexto.matches("\\d+"))
                throw new Exception("Patrim√¥nio inv√°lido! Deve ser um n√∫mero inteiro positivo.");
            Integer patrimonio = Integer.valueOf(patrimonioTexto);
            // **Valida√ß√£o da Quilometragem**
            String kilometragemTexto = jTextField_kilometragem.getText().trim();
            if (!kilometragemTexto.matches("\\d+"))
                throw new Exception("Quilometragem inv√°lida! Deve ser um n√∫mero inteiro n√£o negativo.");

            int kilometragem = Integer.parseInt(kilometragemTexto);

            // **Valida√ß√£o do Modelo**
            String aux = (String) jComboBox_Modelo.getSelectedItem();
            if (aux == null || !aux.contains("-")) 
                throw new Exception("Selecione um modelo v√°lido no campo de modelo.");
                
            String[] vetModelo = aux.split("-");
            int idModelo = Integer.parseInt(vetModelo[0]);
            Modelo modelo = new Modelo(idModelo);
            modelo = modeloBD.consultar(modelo);

            // **Cria√ß√£o das datas ajustadas**
            Calendar calendarAnoFabricacao = Calendar.getInstance();
            calendarAnoFabricacao.set(Calendar.YEAR, anoFabricacao);
            calendarAnoFabricacao.set(Calendar.MONTH, Calendar.JANUARY);
            calendarAnoFabricacao.set(Calendar.DAY_OF_MONTH, 1);
            Date dataAnoFabricacao = calendarAnoFabricacao.getTime();

            Calendar calendarAnoModelo = Calendar.getInstance();
            calendarAnoModelo.set(Calendar.YEAR, anoModelo);
            calendarAnoModelo.set(Calendar.MONTH, Calendar.JANUARY);
            calendarAnoModelo.set(Calendar.DAY_OF_MONTH, 1);
            Date dataAnoModelo = calendarAnoModelo.getTime();

            // **Cria√ß√£o do objeto Ve√≠culo**
            Veiculo objVeiculo = new Veiculo(
                placa, 
                dataAnoFabricacao, 
                dataRegistro, 
                chassi, 
                patrimonio, 
                kilometragem, 
                dataAnoModelo, 
                modelo
            );
            // **Persist√™ncia no banco**
            veiculoBD.incluir(objVeiculo);
            limparTela();
            mostrarVeiculoNaGrid();
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao incluir ve√≠culo: " + erro.getMessage());
        }
    }//GEN-LAST:event_jButtonincluirActionPerformed

    private void jButton_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_alterarActionPerformed
        // TODO add your handling code here:
        try {
// **Valida√ß√£o da Placa**
            String placa = jTextField_placa.getText().trim().toUpperCase();
            if (placa.isEmpty() || !placa.matches("^[A-Z]{3}[0-9][0-9A-Z][0-9]{2}$"))
                throw new Exception("Placa inv√°lida! Use o formato ABC-1234 ou ABC1D23.");
            // **Valida√ß√£o do Ano de Fabrica√ß√£o**
            int anoFabricacao = jYearChooser2_anofabricacao.getYear();
            int anoAtual = Calendar.getInstance().get(Calendar.YEAR);
            if (anoFabricacao < 1900 || anoFabricacao > anoAtual)
                throw new Exception("Ano de fabrica√ß√£o inv√°lido! Deve estar entre 1900 e " + anoAtual + ".");

            // **Valida√ß√£o do Ano do Modelo**
            int anoModelo = jYearChooser1_anomodelo.getYear();
            if (anoModelo > anoAtual + 1)
                throw new Exception("Ano do modelo inv√°lido! Deve ser no m√°ximo " + (anoAtual + 1) + ".");

            // **Valida√ß√£o da Data de Registro**
            Date dataRegistro = jCalendar1_dataregistro.getDate();
            if (dataRegistro == null)
                throw new Exception("Data de registro inv√°lida! Selecione uma data v√°lida.");

            // **Valida√ß√£o do Chassi**
            String chassi = jFormattedTextField1_chassi.getText().trim().toUpperCase();
            if (chassi.isEmpty())
                chassi = null; 
            else if (chassi.length() != 17 || !chassi.matches("[A-Z0-9]+"))
                throw new Exception("Chassi inv√°lido! Deve conter exatamente 17 caracteres alfanum√©ricos.");

            // **Valida√ß√£o do Patrim√¥nio**
            String patrimonioTexto = jTextField_patrimonio.getText().trim();
            if (patrimonioTexto.isEmpty())
                patrimonioTexto = "-1";
            else if (!patrimonioTexto.matches("\\d+"))
                throw new Exception("Patrim√¥nio inv√°lido! Deve ser um n√∫mero inteiro positivo.");
            Integer patrimonio = Integer.valueOf(patrimonioTexto);
            // **Valida√ß√£o da Quilometragem**
            String kilometragemTexto = jTextField_kilometragem.getText().trim();
            if (!kilometragemTexto.matches("\\d+"))
                throw new Exception("Quilometragem inv√°lida! Deve ser um n√∫mero inteiro n√£o negativo.");

            int kilometragem = Integer.parseInt(kilometragemTexto);

            // **Valida√ß√£o do Modelo**
            String aux = (String) jComboBox_Modelo.getSelectedItem();
            if (aux == null || !aux.contains("-")) 
                throw new Exception("Selecione um modelo v√°lido no campo de modelo.");
            String[] vetModelo = aux.split("-");
            int idModelo = Integer.parseInt(vetModelo[0]);
            Modelo modelo = new Modelo(idModelo);

            // **Cria√ß√£o das datas ajustadas**
            Calendar calendarAnoFabricacao = Calendar.getInstance();
            calendarAnoFabricacao.set(Calendar.YEAR, anoFabricacao);
            calendarAnoFabricacao.set(Calendar.MONTH, Calendar.JANUARY);
            calendarAnoFabricacao.set(Calendar.DAY_OF_MONTH, 1);
            Date dataAnoFabricacao = calendarAnoFabricacao.getTime();

            Calendar calendarAnoModelo = Calendar.getInstance();
            calendarAnoModelo.set(Calendar.YEAR, anoModelo);
            calendarAnoModelo.set(Calendar.MONTH, Calendar.JANUARY);
            calendarAnoModelo.set(Calendar.DAY_OF_MONTH, 1);
            Date dataAnoModelo = calendarAnoModelo.getTime();

            // **Cria√ß√£o do objeto Ve√≠culo**
            Veiculo objVeiculo = new Veiculo(
                placa, 
                dataAnoFabricacao, 
                dataRegistro, 
                chassi, 
                patrimonio, 
                kilometragem, 
                dataAnoModelo, 
                modelo
            );
            veiculoBD.alterar(objVeiculo);
            limparTela();
            mostrarVeiculoNaGrid();
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, "Incluir Visao: "+erro.getMessage());
        }
    }//GEN-LAST:event_jButton_alterarActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        // TODO add your handling code here:
        try {
        if(jTextField_placa.getText().isEmpty()) throw new Exception("placa vazio");
            Veiculo objVeiculo = new Veiculo(jTextField_placa.getText().toUpperCase());
            objVeiculo = (veiculoBD.consultar(objVeiculo));
      
            jTextField_placa.setText(objVeiculo.getPlaca());
            jFormattedTextField1_chassi.setText(objVeiculo.getChassi());
            jTextField_kilometragem.setText(objVeiculo.getKilometragem()+"");
            if(objVeiculo.getPatrimonio() != null){
                jTextField_patrimonio.setText(objVeiculo.getPatrimonio()+"");
            }
            else{
                jTextField_patrimonio.setText("");
            }
            jComboBox_Modelo.setSelectedItem(modeloBD.consultar(objVeiculo.getModelo()).toString());
            
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(objVeiculo.getAnoFabricacao());
            int anoFabri = calendar.get(Calendar.YEAR);
            jYearChooser2_anofabricacao.setYear(anoFabri);
            
            Calendar calendar2 = Calendar.getInstance();
            calendar2.setTime(objVeiculo.getAnoModelo());
            int anoModelo = calendar2.get(Calendar.YEAR);
            jYearChooser1_anomodelo.setYear(anoModelo);
            
            jCalendar1_dataregistro.setDate(objVeiculo.getDataRegistro());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, "Buscar Visao: "+erro.getMessage());
        }
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jTextField_patrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_patrimonioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_patrimonioActionPerformed

    private void jTable_SaidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SaidaMouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable_Saida.getModel();
        int selectedRowIndex = jTable_Saida.getSelectedRow();
        
        jTextField_placa.setText(model.getValueAt(selectedRowIndex, 0).toString());
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, Integer.parseInt((String) model.getValueAt(selectedRowIndex, 1)));
        jYearChooser2_anofabricacao.setYear(calendar.get(Calendar.YEAR));
        
        String aux = (String) model.getValueAt(selectedRowIndex, 2);
        String vetDate[] = aux.split("-");
        Calendar calendarDate = Calendar.getInstance();
        calendarDate.set(Calendar.YEAR, Integer.parseInt(vetDate[0]));
        calendarDate.set(Calendar.MONTH, Integer.parseInt(vetDate[1]) - 1);
        calendarDate.set(Calendar.DAY_OF_MONTH, Integer.parseInt(vetDate[2]));
        jCalendar1_dataregistro.setDate(calendarDate.getTime());
        
        jFormattedTextField1_chassi.setText(model.getValueAt(selectedRowIndex, 3).toString());
        jTextField_patrimonio.setText(model.getValueAt(selectedRowIndex, 4).toString());
        jTextField_kilometragem.setText(model.getValueAt(selectedRowIndex, 5).toString());
        
        Calendar calendar2 = Calendar.getInstance();
        calendar2.set(Calendar.YEAR, Integer.parseInt((String) model.getValueAt(selectedRowIndex, 6)));
        jYearChooser1_anomodelo.setYear(calendar2.get(Calendar.YEAR));
        try {
            String auxModelo = (String) model.getValueAt(selectedRowIndex, 7);
            String vetModelo[] = auxModelo.split("-");
            Modelo modelo = new Modelo(Integer.parseInt(vetModelo[0]));
            jComboBox_Modelo.setSelectedItem(modeloBD.consultar(modelo).toString());
        } catch (Exception ex) {
            Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable_SaidaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_alterar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButtonincluir;
    private com.toedter.calendar.JCalendar jCalendar1_dataregistro;
    private javax.swing.JComboBox<String> jComboBox_Modelo;
    private javax.swing.JFormattedTextField jFormattedTextField1_chassi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Saida;
    private javax.swing.JTextField jTextField_kilometragem;
    private javax.swing.JTextField jTextField_patrimonio;
    private javax.swing.JTextField jTextField_placa;
    private com.toedter.calendar.JYearChooser jYearChooser1_anomodelo;
    private com.toedter.calendar.JYearChooser jYearChooser2_anofabricacao;
    // End of variables declaration//GEN-END:variables
}
